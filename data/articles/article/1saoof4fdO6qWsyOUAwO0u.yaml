---
:id: 1saoof4fdO6qWsyOUAwO0u
:title: Verifying CORS Headers with cURL
:slug: verifying-cors-headers-with-curl
:author:
- :id: 6h5OXjiiUoyoIYKkaGmKQ
  :name: Ryan Lindsey
  :website: https://pixelsonly.com
  :profilePhoto:
    :title: Ryan
    :description: Ryan Lindsey 2016
    :url: "//images.contentful.com/v4zq60bqlwhq/5Pbas8LuLKEmkOGyGcY6MM/06c6824cfd07693b2a4d7dafa300c5f1/IMG_0644-ryan-lindsey-1600x1600.jpg"
  :biography: Developer, gadget lover, and adrenaline junkie.
:blurb: Verifying CORS headers on a web asset is fairly easy but I find the cURL syntax
  to be difficult to remember at times. Here I'll show you how to create a simple
  bash function so you can easily debug CORS headers on any resource.
:body: |
  Often times I'll find myself wanting to verify CORS headers on a specific static resource, for example, a webfont.

  Consider the following command:

  ~~~ bash
  $ curl -I -s -X GET -H "Origin: pixelsonly.com" https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.4.0/fonts/FontAwesome.otf
  ~~~

  In the above example I'm asking cURL to return the document head of the specified resource via a GET request. Here's the output:

  ~~~ bash
  HTTP/1.1 200 OK
  Server: cloudflare-nginx
  Date: Thu, 22 Oct 2015 21:15:04 GMT
  Content-Type: application/font-sfnt
  Content-Length: 106260
  Connection: keep-alive
  Last-Modified: Wed, 29 Jul 2015 11:33:54 GMT
  Expires: Tue, 11 Oct 2016 21:15:04 GMT
  Cache-Control: public, max-age=30672000
  Access-Control-Allow-Origin: *
  CF-Cache-Status: HIT
  Accept-Ranges: bytes
  CF-RAY: 2398372a295028ca-SJC
  ~~~


  This is especially helpful when working with webfonts served from content delivery networks. To make things even easier and a little more [DRY](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself) you can add the following function to your ZSH or Bash profile.

  ~~~ bash
  corscheck() {
    curl -I -s -X GET -H "Origin: $1" $2
  }
  ~~~

  The first argument will be the domain that will be making the request and the second is the URL of the resource in question. See the usage example below:

  ~~~ bash
  $ corscheck pixelsonly.com https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.4.0/fonts/FontAwesome.otf
  ~~~
:category:
- :id: 11ckGSN1WAom28eEOAOeYS
  :title: Development
:featuredImage:
  :title: Browser Network Requests
  :description: 
  :url: "//images.contentful.com/v4zq60bqlwhq/2tyJVRhoJm4CA8CqA2uaaW/07fffc99fd1875b5bb047c259587a843/request-headers-1600x800.png"
:date: !ruby/object:DateTime 2015-10-22 00:00:00.000000000 Z
:comments: true
